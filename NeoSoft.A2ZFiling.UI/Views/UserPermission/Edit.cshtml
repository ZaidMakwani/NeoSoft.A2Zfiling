@model IEnumerable<NeoSoft.A2ZFiling.UI.ViewModels.UserPermissionVM>
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedRoleId = Model.First().RoleId;
    }
<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h2>Edit User Permission</h2>

            <form id="editUserPermissionForm" asp-action="Edit" asp-controller="UserPermission" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label>Role:</label>
                    <select id="rolesDropdown" name="RoleId" class="form-control">
                       @*  <option value="">--- Select Role ---</option> *@
                        @foreach (var permission in Model)
                        {
                            <option value="@permission.RoleId" selected="@(permission.RoleId ==selectedRoleId)">
                                @permission.RoleName
                            </option>
                        }
                    </select>

                    @Html.ValidationMessageFor(m => m.First().RoleId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @foreach (var permission in Model)
                    {
                        <div class="row">
                            <div class="col-sm-3">
                                <p>@permission.ControllerName</p>
                            </div>
                            <div class="col-sm-9">
                                <span style="display: inline-block;">
                                    @foreach (var action in permission.Actions)
                                    {
                                        <span style="margin-right: 20px;">
                                            <input class="form-check-input" type="checkbox"
                                                   id="@action.PermissionId" name="SelectedPermissions"
                                                   value="@action.PermissionId"
                                                   checked="@(action.IsActive)" />
                                            <label class="form-check-label" for="@action.PermissionId" style="margin-right: 10px;">
                                                @action.ActionName
                                            </label>
                                        </span>
                                    }
                                </span>
                            </div>
                        </div>
                    }
                    @Html.ValidationMessageFor(m => m.First().SelectedPermissions, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="@Url.Action("GetAll", "UserPermission")" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            populateRolesDropdown();
        });

        // Function to fetch roles and populate dropdown
        function populateRolesDropdown() {
            
            $.ajax({
                url: '@Url.Action("GetAllRoles", "Role")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $('#rolesDropdown').empty();
                    $('#rolesDropdown').append($('<option>', {
                        value: '',
                        text: '--- Select Role ---'
                    }));
                    $.each(data, function (index, role) {
                        $('#rolesDropdown').append($('<option>', {
                            value: role.roleId,
                            text: role.roleName
                        }));
                    });
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error fetching roles: ' + errorThrown);
                }
            });
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
